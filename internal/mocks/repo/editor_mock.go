// Code generated by MockGen. DO NOT EDIT.
// Source: internal/route/repo/editor.go

// Package mock_repo is a generated GoMock package.
package mock_repo

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	context "github.com/ivis-yoshida/gogs/internal/context"
)

// MockAbstructDmpUtil is a mock of AbstructDmpUtil interface.
type MockAbstructDmpUtil struct {
	ctrl     *gomock.Controller
	recorder *MockAbstructDmpUtilMockRecorder
}

// MockAbstructDmpUtilMockRecorder is the mock recorder for MockAbstructDmpUtil.
type MockAbstructDmpUtilMockRecorder struct {
	mock *MockAbstructDmpUtil
}

// NewMockAbstructDmpUtil creates a new mock instance.
func NewMockAbstructDmpUtil(ctrl *gomock.Controller) *MockAbstructDmpUtil {
	mock := &MockAbstructDmpUtil{ctrl: ctrl}
	mock.recorder = &MockAbstructDmpUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAbstructDmpUtil) EXPECT() *MockAbstructDmpUtilMockRecorder {
	return m.recorder
}

// BidingDmpSchemaList mocks base method.
func (m *MockAbstructDmpUtil) BidingDmpSchemaList(c context.AbstructContext, treePath string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BidingDmpSchemaList", c, treePath)
	ret0, _ := ret[0].(error)
	return ret0
}

// BidingDmpSchemaList indicates an expected call of BidingDmpSchemaList.
func (mr *MockAbstructDmpUtilMockRecorder) BidingDmpSchemaList(c, treePath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BidingDmpSchemaList", reflect.TypeOf((*MockAbstructDmpUtil)(nil).BidingDmpSchemaList), c, treePath)
}

// FetchDmpSchema mocks base method.
func (m *MockAbstructDmpUtil) FetchDmpSchema(c context.AbstructContext, blobPath string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchDmpSchema", c, blobPath)
	ret0, _ := ret[0].(error)
	return ret0
}

// FetchDmpSchema indicates an expected call of FetchDmpSchema.
func (mr *MockAbstructDmpUtilMockRecorder) FetchDmpSchema(c, blobPath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchDmpSchema", reflect.TypeOf((*MockAbstructDmpUtil)(nil).FetchDmpSchema), c, blobPath)
}
